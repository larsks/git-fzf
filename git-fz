#!/bin/bash

# subcommands
# - edit
# - reword
# - pick

select_commit() {
	git rev-list --oneline "${2:-HEAD}" |
		fzf --reverse \
			--preview-label=DESCRIPTION \
			--preview='git show --name-status {1} | bat --color always' \
			|
		awk '{print $1}'
}

git_fz_edit() {
	select_commit "$@" |
	GIT_SEQUENCE_EDITOR='sed -i 1s/pick/edit/' xargs -IREV git rebase -i "REV^"
}

git_fz_reword() {
	select_commit "$@" |
	GIT_SEQUENCE_EDITOR='sed -i 1s/pick/reword/' xargs -IREV git rebase -i "REV^"
}

git_fz_pick() {
	select_commit "$@"
}

select_branch() {
	refpattern=(refs/heads/)
	while getopts ra ch; do
		case $ch in
			r)	refpattern=(refs/remotes/);;
			a)	refpattern=(refs/remotes/ refs/heads);;
			*)	exit 2;;
		esac
	done
	shift $(( OPTIND - 1 ))
	git for-each-ref --format='%(refname:lstrip=2)' "${refpattern[@]}" |
		fzf \
			--preview-label=DESCRIPTION \
			--preview='git show --name-status {1} | bat --color always' \
			|
		awk '{print $1}'
}

git_fz_switch() {
	select_branch -- |
		xargs git switch
}

cmd=$1
shift

case $cmd in
	edit|ed|goto|g)	git_fz_edit "$@"
		;;
	reword|re)	git_fz_reword "$@"
		;;
	pick|p)	git_fz_pick "$@"
		;;
	switch|sw)	git_fz_switch "$@"
		;;

	*)	echo "Must select one of edit, reword, pick" >&2
		exit 1
		;;
esac
